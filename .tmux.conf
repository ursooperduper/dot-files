# ##############################################################################
# ## General                                                                  ##
# ##############################################################################

# Set vi mode
setw -g mode-keys vi

# Make tmux more responsive (quicker)
set -s escape-time 1

# Set the base index for windows and panes to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# ##############################################################################
# ## Keyboard Control                                                         ##
# ##############################################################################

# Hand shortcut to reload the tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Remap the prefix for tmux (instead of C-b)
unbind C-b
# Set -g prefix `
set -g prefix C-a
bind-key ` send-prefix
# And free up Ctrl-b
unbind C-b

# Pressing Ctrl-a twice will send Ctrl-a to an app running in tmux
bind C-a send-prefix

# Better bindings for splitting panes
bind | split-window -h
bind - split-window -v

# Improved movement bindings
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Cycling through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Changing the size of panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Copy to system clipboard
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Pasting from the system clipboard
bind C-v run "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux past-buffer"

# Toggle to broadcast commands to other panes in the session
bind C-s set-window-option synchronize-panes

# ##############################################################################
# ## Mouse Control
# ##############################################################################

# Enable mouse mode
setw -g mode-mouse off

# Allow the mouse to select and resize panes and windows
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# ##############################################################################
# ## Color                                                                    ##
# ##############################################################################

# Use 256 colors for glorious wonders to behold
set -g default-terminal "xterm"
set -g default-terminal "xterm-256color"
# set -g terminal-overrides 'xterm:colors=88'

# Some default color settings
# Status Bar
# set -g status-fg black
# set -g status-bg white
# Window List
# setw -g window-status-fg cyan
# setw -g window-status-bg default
# setw -g window-status-attr dim
# Active Window
# setw -g window-status-current-fg white
# setw -g window-status-current-bg red
# setw -g window-status-current-attr bright
# Pane Dividers
# set -g pane-border-fg red
# set -g pane-border-bg black
# set -g pane-active-border-fg white
# set -g pane-active-border-bg blue
# Command Line
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

# Customize the status bar
# set -g status-left-length 40
# set -g status-left "#[fg=black] Session:  #S #[fg=blue] #I #[fg=red] #P"
# set -g status-right "#[fg=blue] %d %b %R"

# ##############################################################################
# ## Status Bar                                                               ##
# ##############################################################################

# Use UTF-8 in the status bar
set -g status-utf8 on

# Update the status bar once every 60 secs
set -g status-interval 60

# Position of the window list
set -g status-justify centre

# Visual notifications for activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# bind Escape copy-mode
# unbind p
# bind -p paste-buffer
# bind -t vi-copy 'v' begin-selection     # Begin selection in copy mode.
# bind -t vi-copy 'C-v' rectangle-toggle  # Begin selection in copy mode.
# bind -t vi-copy 'y' copy-selection      # Yank selection in copy mode.

# Configures tmux's default new windows to it loads the bash shell
# through the wrapper script
#set -g default-command "reattach-to-user-namespace -l /bin/bash"

# Enable logging
#bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

set-option -g status on                # Turn the status bar on
set -g status-utf8 on                  # Set utf-8 for the status bar
set -g status-interval 5               # Set update frequencey (default 15 seconds)
set -g status-justify centre           # Center window list for clarity
# set-option -g status-position top    # Position the status bar at top of screen

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# Show battery in status pane
# The battery script doesn't work for me
# set -g status-right "#(~/battery Discharging) | #[fg=cyan] %d %b %R"

# Set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright

# Show host name and IP address on left side of status bar
set -g status-left-length 70
set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# Show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"
